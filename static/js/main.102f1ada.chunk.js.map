{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","handleButton","setState","prevState","event","this","props","className","summary","location","start","dateTime","timeZone","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","locations","query","suggestions","showSuggestions","infoText","handleInputChanged","value","target","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","numberOfEvents","type","onChange","onFocus","display","NumberOfEvents","updateEventCount","mockData","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getAccessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","axios","results","authUrl","data","href","getEvents","NProgress","startsWith","done","token","url","extractLocations","JSON","stringify","Set","App","locationEvents","slice","eventCount","currentLocation","mounted","isTokenValid","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.102f1ada.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    show: false,\n  };\n\n  handleButton = () => {\n    this.setState((prevState) => ({ show: !prevState.show }));\n  };\n\n  render() {\n    const event = this.props.event;\n    return (\n      <ul className=\"event\">\n        <li className=\"summary\">{event.summary}</li>\n        <li className=\"location\">{event.location}</li>\n        <li className=\"date\">{event.start.dateTime}</li>\n        <li className=\"timeZone\">{event.start.timeZone}</li>\n        {this.state.show === true && (\n          <p className=\"details\">{event.description}</p>\n        )}\n        {this.state.show === false && (\n          <button className=\"showMore\" onClick={() => this.handleButton()}>\n            Show more\n          </button>\n        )}\n        {this.state.show === true && (\n          <button className=\"showLess\" onClick={() => this.handleButton()}>\n            Show less\n          </button>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    )\n  }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\nexport { InfoAlert };\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\nexport { ErrorAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    locations: this.props.locations,\n    query: '',\n    suggestions: [],\n    showSuggestions: false,\n    infoText: '',\n  }\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true });\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city',\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: ''\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false\n    });\n\n    this.props.updateEvents(suggestion, this.props.numberOfEvents);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <p>Search your city</p>\n        <input type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }} />\n        <div>\n          <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n            {this.state.suggestions.map((suggestion) => (\n              <li\n                key={suggestion}\n                onClick={() => this.handleItemClicked(suggestion)}\n              >{suggestion}</li>\n            ))}\n            <li onClick={() => this.handleItemClicked(\"all\")}>\n              <b>See all cities</b>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n\n\n","import React, { Component } from \"react\";\nimport { ErrorAlert } from \"./Alert.js\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n    infoText: '',\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEventCount(event.target.value);\n    if (value.length <= 0 || value.length > 32) {\n      this.setState({\n        infoText: 'Select a number from 1 to 32.',\n        numberOfEvents: ''\n      })\n    } else {\n      return this.setState({\n        numberOfEvents: value,\n        infoText: ''\n      });\n    }\n  };\n\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <input\n          type=\"number\"\n          className=\"eventNum\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n        <ErrorAlert text={this.state.infoText} />\n      </div>\n    )\n  }\n};\n\nexport default NumberOfEvents\n","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  }\n];\n\nexport { mockData };\n","import { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\nimport \"./nprogress.css\";\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://dxchgdtgc1.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://dxchgdtgc1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =\n      \"https://dxchgdtgc1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/\" +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n\n};\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n","\nimport React, { Component } from 'react';\nimport './App.css';\nimport './EventList';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations, checkToken } from './api';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n  }\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({\n            events: events.slice(0, this.state.numberOfEvents),\n            locations: extractLocations(events)\n          });\n        }\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      const { numberOfEvents } = this.state;\n      this.setState({\n        events: locationEvents.slice(0, numberOfEvents)\n      });\n    });\n  }\n\n  updateEventCount = (eventCount) => {\n    const { currentLocation } = this.state;\n    this.setState({\n      numberOfEvents: eventCount\n    });\n    this.updateEvents(currentLocation, eventCount);\n  }\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents numberOfEvents={numberOfEvents} updateEventCount={this.updateEventCount} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n// import * as atatus from 'atatus-spa';\n// atatus.config('61839cf67d3b4e7e8c1ddf4ff880eef0').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}