{
  "service": {
    "service": "auth-server",
    "serviceObject": {
      "name": "auth-server"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "eu-central-1",
      "timeout": 60,
      "environment": {
        "CLIENT_ID": "579337973856-44gfq8slthtptr6pnanovpavrbj6h09s.apps.googleusercontent.com",
        "CLIENT_SECRET": "EVSrz0pYKDekAJaDsPpqnfNs",
        "PROJECT_ID": "meet-app-320520",
        "CALENDAR_ID": "nicolaspartearroyo@gmail.com"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetAuthURLLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/auth-server-dev-getAuthURL"
            }
          },
          "GetAccessTokenLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/auth-server-dev-getAccessToken"
            }
          },
          "GetCalendarEventsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/auth-server-dev-getCalendarEvents"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "auth-server",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-server-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-server-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "auth-server",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetAuthURLLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/auth-server/dev/1627040351721-2021-07-23T11:39:11.721Z/auth-server.zip"
              },
              "Handler": "handler.getAuthURL",
              "Runtime": "nodejs12.x",
              "FunctionName": "auth-server-dev-getAuthURL",
              "MemorySize": 1024,
              "Timeout": 60,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "579337973856-44gfq8slthtptr6pnanovpavrbj6h09s.apps.googleusercontent.com",
                  "CLIENT_SECRET": "EVSrz0pYKDekAJaDsPpqnfNs",
                  "PROJECT_ID": "meet-app-320520",
                  "CALENDAR_ID": "nicolaspartearroyo@gmail.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAuthURLLogGroup"
            ]
          },
          "GetAccessTokenLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/auth-server/dev/1627040351721-2021-07-23T11:39:11.721Z/auth-server.zip"
              },
              "Handler": "handler.getAccessToken",
              "Runtime": "nodejs12.x",
              "FunctionName": "auth-server-dev-getAccessToken",
              "MemorySize": 1024,
              "Timeout": 60,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "579337973856-44gfq8slthtptr6pnanovpavrbj6h09s.apps.googleusercontent.com",
                  "CLIENT_SECRET": "EVSrz0pYKDekAJaDsPpqnfNs",
                  "PROJECT_ID": "meet-app-320520",
                  "CALENDAR_ID": "nicolaspartearroyo@gmail.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAccessTokenLogGroup"
            ]
          },
          "GetCalendarEventsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/auth-server/dev/1627040351721-2021-07-23T11:39:11.721Z/auth-server.zip"
              },
              "Handler": "handler.getCalendarEvents",
              "Runtime": "nodejs12.x",
              "FunctionName": "auth-server-dev-getCalendarEvents",
              "MemorySize": 1024,
              "Timeout": 60,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "579337973856-44gfq8slthtptr6pnanovpavrbj6h09s.apps.googleusercontent.com",
                  "CLIENT_SECRET": "EVSrz0pYKDekAJaDsPpqnfNs",
                  "PROJECT_ID": "meet-app-320520",
                  "CALENDAR_ID": "nicolaspartearroyo@gmail.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetCalendarEventsLogGroup"
            ]
          },
          "GetAccessTokenLambdaVersiont868aypiGzOwG6bVKJarLYk9HEFiAebPXhZyWHDO26g": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAccessTokenLambdaFunction"
              },
              "CodeSha256": "RQPImYlnQzc6CNaEreviLRhjj6buVh39e+VGdU7Ty4s="
            }
          },
          "GetAuthURLLambdaVersionjnAGueM9s5AL9DjhgWPdjwrbLKJFZTFrpRkJMTdNqIY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAuthURLLambdaFunction"
              },
              "CodeSha256": "RQPImYlnQzc6CNaEreviLRhjj6buVh39e+VGdU7Ty4s="
            }
          },
          "GetCalendarEventsLambdaVersionPxq20LS6uwye5SmEH7uHRxjdTYqJrYOQ5l0DaZD3w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetCalendarEventsLambdaFunction"
              },
              "CodeSha256": "RQPImYlnQzc6CNaEreviLRhjj6buVh39e+VGdU7Ty4s="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-auth-server",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceApi": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "api",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiGetDashauthDashurl": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApi"
              },
              "PathPart": "get-auth-url",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiToken": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApi"
              },
              "PathPart": "token",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiTokenCodeVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApiToken"
              },
              "PathPart": "{code}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodApiGetDashauthDashurlGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiGetDashauthDashurl"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAuthURLLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetAuthURLLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiTokenCodeVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiTokenCodeVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAccessTokenLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetAccessTokenLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1627040348044": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodApiGetDashauthDashurlGet",
              "ApiGatewayMethodApiTokenCodeVarGet"
            ]
          },
          "GetAuthURLLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAuthURLLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetAccessTokenLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAccessTokenLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-auth-server-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetAccessTokenLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAccessTokenLambdaVersiont868aypiGzOwG6bVKJarLYk9HEFiAebPXhZyWHDO26g"
            },
            "Export": {
              "Name": "sls-auth-server-dev-GetAccessTokenLambdaFunctionQualifiedArn"
            }
          },
          "GetAuthURLLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAuthURLLambdaVersionjnAGueM9s5AL9DjhgWPdjwrbLKJFZTFrpRkJMTdNqIY"
            },
            "Export": {
              "Name": "sls-auth-server-dev-GetAuthURLLambdaFunctionQualifiedArn"
            }
          },
          "GetCalendarEventsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetCalendarEventsLambdaVersionPxq20LS6uwye5SmEH7uHRxjdTYqJrYOQ5l0DaZD3w"
            },
            "Export": {
              "Name": "sls-auth-server-dev-GetCalendarEventsLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-auth-server-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "getAuthURL": {
        "handler": "handler.getAuthURL",
        "events": [
          {
            "http": {
              "path": "api/get-auth-url",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "auth-server-dev-getAuthURL",
        "package": {},
        "memory": 1024,
        "timeout": 60,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetAuthURLLambdaVersionjnAGueM9s5AL9DjhgWPdjwrbLKJFZTFrpRkJMTdNqIY"
      },
      "getAccessToken": {
        "handler": "handler.getAccessToken",
        "events": [
          {
            "http": {
              "path": "api/token/{code}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "auth-server-dev-getAccessToken",
        "package": {},
        "memory": 1024,
        "timeout": 60,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetAccessTokenLambdaVersiont868aypiGzOwG6bVKJarLYk9HEFiAebPXhZyWHDO26g"
      },
      "getCalendarEvents": {
        "handler": "handler.getCalendarEvents",
        "events": [
          {
            "path": "api/get-events/{access_token}",
            "method": "get",
            "http": null
          }
        ],
        "name": "auth-server-dev-getCalendarEvents",
        "package": {},
        "memory": 1024,
        "timeout": 60,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetCalendarEventsLambdaVersionPxq20LS6uwye5SmEH7uHRxjdTYqJrYOQ5l0DaZD3w"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/Neik/careerfoundry/meet/meet/auth-server/.serverless/auth-server.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/auth-server/dev/1627040351721-2021-07-23T11:39:11.721Z",
    "artifact": "auth-server.zip"
  }
}